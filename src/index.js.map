{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/bind.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/utils.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/core/AxiosError.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/null.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/toFormData.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/AxiosURLSearchParams.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/buildURL.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/core/InterceptorManager.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/defaults/transitional.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/platform/browser/classes/FormData.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/platform/browser/classes/Blob.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/platform/browser/index.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/platform/common/utils.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/platform/index.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/toURLEncodedForm.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/formDataToJSON.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/defaults/index.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/parseHeaders.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/core/AxiosHeaders.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/core/transformData.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/cancel/isCancel.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/cancel/CanceledError.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/core/settle.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/cookies.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/isAbsoluteURL.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/combineURLs.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/core/buildFullPath.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/isURLSameOrigin.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/parseProtocol.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/speedometer.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/adapters/xhr.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/adapters/adapters.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/core/dispatchRequest.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/core/mergeConfig.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/env/data.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/validator.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/core/Axios.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/cancel/CancelToken.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/spread.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/isAxiosError.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/helpers/HttpStatusCode.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/axios.js", "../node_modules/.pnpm/axios@1.6.2/node_modules/axios/index.js", "../node_modules/.pnpm/@kurkle+color@0.3.2/node_modules/@kurkle/color/dist/color.esm.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/helpers/helpers.core.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/helpers/helpers.math.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/helpers/helpers.collection.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/helpers/helpers.extras.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/helpers/helpers.easing.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/helpers/helpers.color.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.animations.defaults.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.layouts.defaults.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/helpers/helpers.intl.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.ticks.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.scale.defaults.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.defaults.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/helpers/helpers.canvas.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/helpers/helpers.options.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/helpers/helpers.config.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/helpers/helpers.curve.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/helpers/helpers.dom.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/helpers/helpers.interpolation.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/helpers/helpers.rtl.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/helpers/helpers.segment.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.animator.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.animation.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.animations.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.datasetController.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/controllers/controller.bar.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/controllers/controller.bubble.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/controllers/controller.doughnut.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/controllers/controller.line.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/controllers/controller.polarArea.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/controllers/controller.pie.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/controllers/controller.radar.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/controllers/controller.scatter.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.adapters.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.interaction.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.layouts.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/platform/platform.base.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/platform/platform.basic.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/platform/platform.dom.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/platform/index.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.element.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.scale.autoskip.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.scale.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.typedRegistry.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.registry.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.plugins.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.config.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/core/core.controller.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/elements/element.arc.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/elements/element.line.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/elements/element.point.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/elements/element.bar.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/plugins/plugin.colors.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/plugins/plugin.decimation.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/plugins/plugin.filler/filler.options.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/plugins/plugin.filler/filler.target.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/plugins/plugin.filler/index.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/plugins/plugin.legend.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/plugins/plugin.title.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/plugins/plugin.subtitle.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/plugins/plugin.tooltip.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/scales/scale.category.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/scales/scale.linearbase.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/scales/scale.linear.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/scales/scale.logarithmic.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/scales/scale.radialLinear.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/scales/scale.time.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/scales/scale.timeseries.js", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/src/index.ts", "../node_modules/.pnpm/chart.js@4.4.1/node_modules/chart.js/auto/auto.js", "index.cjs"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n", "'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n", "'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n", "// eslint-disable-next-line strict\nexport default null;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n", "'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n", "'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n", "'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n", "'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n", "'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n", "'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n", "import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n", "const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv\n}\n", "import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n", "'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n", "'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n", "'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n", "'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n", "'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n", "'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n", "'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n", "import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n", "'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n", "'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n", "'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n", "'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n", "'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    let {responseType, withXSRFToken} = config;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if(platform.hasStandardBrowserEnv) {\n      withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));\n\n      if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(fullPath))) {\n        // Add xsrf header\n        const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n        if (xsrfValue) {\n          requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n        }\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n", "import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n", "'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n", "export const VERSION = \"1.6.2\";", "'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n", "'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n", "'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n", "'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n", "const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n", "'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n", "import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n", "/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n", "/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n", "import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n", "import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n", "import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n", "import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n", "import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n", "const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n", "export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n", "\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n", "import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n", "import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n", "import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n", "import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n", "import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n", "/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n", "import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n", "import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n", "import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n", "export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n", "import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n", "import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n", "import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n", "import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n", "import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n", "import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n", "/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n", "import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n", "import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n", "\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n", "/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n", "/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n", "import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n", "import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n", "import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n", "import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n", "import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n", "import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n", "import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n", "import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n", "import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n", "import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n", "import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n", "import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n", "import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n", "/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n", "import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n", "/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n", "import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n", "import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n", "import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n", "/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n", "import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n", "import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n", "import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n", "import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n", "import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n", "import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n", "import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n", "import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n", "import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n", "export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n", "import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n", "import axios from 'axios';\nimport Chart from 'chart.js/auto';\n\nasync function fetchData() {\n  try {\n    const response = await axios.get(\n      'https://script.google.com/macros/s/AKfycbxnffPLcEmE9jlXGQQyAIqGXYW49my8Cn8aB_Qve80X9yyyMS1XHlSefn43EsFnI878/exec'\n    );\n    return response; // Return the response\n  } catch (error) {\n    // Handle error here\n    console.error('Error:', error);\n    throw error; // Re-throw the error to be handled by the caller\n  }\n}\n\nasync function createData() {\n  try {\n    const response = await fetchData();\n    data = response.data;\n    //obtaining only FCR's data\n    // console.log(data);\n    //var { FCR } = data;\n\n    //provide the first object in the parent object to format the data\n    for (let key in data) {\n      if (data.hasOwnProperty(key)) {\n        var value = data[key];\n        // console.log('the keys');\n        // console.log('the key value is:' + key);\n        console.log(value);\n        await formatData(value);\n        if (key === 'MFRT') {\n          await chart1(fcrLabels, fcrValues);\n          await chart4(fcrLabels, fcrValues);\n        } else if (key === 'CSAT') {\n          console.log(fcrValues);\n          var inc = 0;\n          fcrValues.forEach((ele) => {\n            fcrValues[inc] = ele * 100;\n            inc++;\n          });\n          await chart2(fcrLabels, fcrValues);\n          chart5(fcrLabels, fcrValues);\n        } else {\n          await chart3(fcrLabels, fcrValues);\n          chart6(fcrLabels, fcrValues);\n        }\n      }\n    }\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\n\nasync function formatData(object) {\n  fcrLabels = [];\n  fcrValues = [];\n  Object.keys(object).forEach((element) => {\n    var date = new Date(Date.parse(element));\n    date = date.toLocaleDateString();\n    fcrLabels.push(date);\n  });\n\n  Object.values(object).forEach((element) => {\n    fcrValues.push(element);\n  });\n  return;\n}\n// https://uploads-ssl.webflow.com/63413ad4dec8a91fe53f4fb0/63413ad4dec8a930443f4fd3_Chromatica-Regular.woff2\n\nasync function chart1(label, value) {\n  var ctx = document.getElementById('mfrt').getContext('2d');\n  gradient = ctx.createLinearGradient(0, 0, 0, 400);\n  gradient.addColorStop(0, 'rgba(87,14,64,1)');\n  gradient.addColorStop(1, 'rgba(188,158,177,0.3)');\n  gradient2 = ctx.createLinearGradient(0, 0, 0, 400);\n  gradient2.addColorStop(0, 'rgba(87,14,64,1)');\n  gradient2.addColorStop(1, 'rgba(188,158,177,0)');\n  new Chart(document.getElementById('mfrt'), {\n    type: 'line',\n    data: {\n      labels: label,\n      datasets: [\n        {\n          borderWidth: '2',\n          label: '',\n          data: value,\n          fill: {\n            target: 'origin',\n            // below: 'rgb(0, 0, 255)',\n            above: gradient,\n          },\n\n          //borderColor: 'rgb(75, 192, 192)',\n          tension: 0.2,\n          backgroundColor: '#FFFAF2',\n          borderColor: '#340926',\n          width: 2,\n        },\n      ],\n    },\n    options: {\n      scales: {\n        x: {\n          grid: {\n            display: false,\n          },\n          border: {\n            width: 1,\n            color: '#340926',\n          },\n          title: {\n            family: 'Chromatica',\n            text: 'Date',\n            display: true,\n            color: '#570E40',\n            font: {\n              family: 'Chromatica',\n              size: 20,\n              color: '#570E40',\n            },\n          },\n          ticks: {\n            maxTicksLimit: 6,\n            padding: 10,\n            color: '#570E40',\n          },\n          font: {\n            family: 'Chromatica',\n          },\n        },\n        y: {\n          grid: {\n            display: false,\n          },\n          border: {\n            width: 1,\n            color: '#340926',\n          },\n          title: {\n            text: 'Hours',\n            display: true,\n            color: '#570E40',\n            font: {\n              family: 'Chromatica',\n              size: 20,\n              color: '#570E40',\n            },\n          },\n          ticks: {\n            maxTicksLimit: 6,\n            padding: 10,\n            color: '#570E40',\n            font: {\n              family: 'Chromatica',\n            },\n          },\n        },\n      },\n      plugins: {\n        legend: {\n          display: false,\n        },\n      },\n    },\n  });\n}\n\nasync function chart2(label, value) {\n  var ctx = document.getElementById('csat').getContext('2d');\n  gradient = ctx.createLinearGradient(0, 0, 0, 400);\n  gradient.addColorStop(0, 'rgba(87,14,64,1)');\n  gradient.addColorStop(1, 'rgba(188,158,177,0.3)');\n  gradient2 = ctx.createLinearGradient(0, 0, 0, 400);\n  gradient2.addColorStop(0, 'rgba(87,14,64,1)');\n  gradient2.addColorStop(1, 'rgba(188,158,177,0)');\n  new Chart(document.getElementById('csat'), {\n    type: 'line',\n    data: {\n      labels: label,\n      datasets: [\n        {\n          borderWidth: '2',\n          label: '',\n          data: value,\n          fill: {\n            target: 'origin',\n            // below: 'rgb(0, 0, 255)',\n            above: gradient,\n          },\n\n          //borderColor: 'rgb(75, 192, 192)',\n          tension: 0.2,\n          backgroundColor: '#FFFAF2',\n          borderColor: '#340926',\n          width: 2,\n        },\n      ],\n    },\n    options: {\n      scales: {\n        x: {\n          grid: {\n            display: false,\n          },\n          border: {\n            width: 1,\n            color: '#340926',\n          },\n          title: {\n            family: 'Chromatica',\n            text: 'Date',\n            display: true,\n            color: '#570E40',\n            font: {\n              family: 'Chromatica',\n              size: 20,\n              color: '#570E40',\n            },\n          },\n          ticks: {\n            maxTicksLimit: 6,\n            padding: 10,\n            color: '#570E40',\n          },\n          font: {\n            family: 'Chromatica',\n          },\n        },\n        y: {\n          grid: {\n            display: false,\n          },\n          border: {\n            width: 1,\n            color: '#340926',\n          },\n          title: {\n            text: 'Hours',\n            display: true,\n            color: '#570E40',\n            font: {\n              family: 'Chromatica',\n              size: 20,\n              color: '#570E40',\n            },\n          },\n          ticks: {\n            // maxTicksLimit: 6,\n            family: 'Chromatica',\n            beginAtZero: true,\n            stepSize: 20,\n            max: 100,\n          },\n        },\n      },\n      plugins: {\n        legend: {\n          display: false,\n        },\n      },\n    },\n  });\n}\nasync function chart3(label, value) {\n  var ctx = document.getElementById('fcr').getContext('2d');\n  gradient = ctx.createLinearGradient(0, 0, 0, 400);\n  gradient.addColorStop(0, 'rgba(87,14,64,1)');\n  gradient.addColorStop(1, 'rgba(188,158,177,0.3)');\n  gradient2 = ctx.createLinearGradient(0, 0, 0, 400);\n  gradient2.addColorStop(0, 'rgba(87,14,64,1)');\n  gradient2.addColorStop(1, 'rgba(188,158,177,0)');\n  new Chart(document.getElementById('fcr'), {\n    type: 'line',\n    data: {\n      labels: label,\n      datasets: [\n        {\n          borderWidth: '2',\n          label: '',\n          data: value,\n          fill: {\n            target: 'origin',\n            // below: 'rgb(0, 0, 255)',\n            above: gradient,\n          },\n\n          //borderColor: 'rgb(75, 192, 192)',\n          tension: 0.2,\n          backgroundColor: '#FFFAF2',\n          borderColor: '#340926',\n          width: 2,\n        },\n      ],\n    },\n    options: {\n      scales: {\n        x: {\n          grid: {\n            display: false,\n          },\n          border: {\n            width: 1,\n            color: '#340926',\n          },\n          title: {\n            family: 'Chromatica',\n            text: 'Date',\n            display: true,\n            color: '#570E40',\n            font: {\n              family: 'Chromatica',\n              size: 20,\n              color: '#570E40',\n            },\n          },\n          ticks: {\n            maxTicksLimit: 6,\n            padding: 10,\n            color: '#570E40',\n          },\n          font: {\n            family: 'Chromatica',\n          },\n        },\n        y: {\n          grid: {\n            display: false,\n          },\n          border: {\n            width: 1,\n            color: '#340926',\n          },\n          title: {\n            text: 'Hours',\n            display: true,\n            color: '#570E40',\n            font: {\n              family: 'Chromatica',\n              size: 20,\n              color: '#570E40',\n            },\n          },\n          ticks: {\n            maxTicksLimit: 6,\n            padding: 10,\n            color: '#570E40',\n            font: {\n              family: 'Chromatica',\n            },\n          },\n        },\n      },\n      plugins: {\n        legend: {\n          display: false,\n        },\n      },\n    },\n  });\n}\n\nasync function chart4(label, value) {\n  var ctx = document.getElementById('mfrt').getContext('2d');\n  gradient = ctx.createLinearGradient(0, 0, 0, 400);\n  gradient.addColorStop(0, 'rgba(87,14,64,1)');\n  gradient.addColorStop(1, 'rgba(188,158,177,0.3)');\n  gradient2 = ctx.createLinearGradient(0, 0, 0, 400);\n  gradient2.addColorStop(0, 'rgba(87,14,64,1)');\n  gradient2.addColorStop(1, 'rgba(188,158,177,0)');\n  new Chart(document.getElementById('mfrt-hero'), {\n    type: 'line',\n    data: {\n      labels: label,\n      datasets: [\n        {\n          label: false,\n          borderWidth: 2,\n          pointRadius: 3,\n          data: value,\n          fill: {\n            target: 'origin',\n            // below: 'rgb(0, 0, 255)',\n            above: gradient2,\n          },\n\n          //borderColor: 'rgb(75, 192, 192)',\n          tension: 0.2,\n          backgroundColor: '#FFFAF2',\n          borderColor: '#340926',\n        },\n      ],\n    },\n    options: {\n      scales: {\n        x: {\n          display: false,\n          grid: {\n            display: false,\n            drawOnChartArea: false,\n            drawTicks: false,\n            color: 'transparent',\n            width: 0,\n          },\n          border: {\n            display: false,\n          },\n          ticks: {\n            display: false,\n            padding: 0,\n          },\n        },\n        y: {\n          display: false,\n          grid: {\n            display: false,\n            drawOnChartArea: false,\n            drawTicks: false,\n            color: 'transparent',\n            width: 0,\n          },\n          border: {\n            display: false,\n          },\n          ticks: {\n            backdropPadding: 0,\n            display: false,\n            mirror: true,\n            padding: 0,\n          },\n        },\n      },\n      plugins: {\n        legend: {\n          display: false,\n        },\n      },\n    },\n  });\n}\n\nasync function chart5(label, value) {\n  var ctx = document.getElementById('csat').getContext('2d');\n  gradient = ctx.createLinearGradient(0, 0, 0, 400);\n  gradient.addColorStop(0, 'rgba(87,14,64,1)');\n  gradient.addColorStop(1, 'rgba(188,158,177,0.3)');\n  gradient2 = ctx.createLinearGradient(0, 0, 0, 400);\n  gradient2.addColorStop(0, 'rgba(87,14,64,1)');\n  gradient2.addColorStop(1, 'rgba(188,158,177,0)');\n  new Chart(document.getElementById('csat-hero'), {\n    type: 'line',\n    data: {\n      labels: label,\n      datasets: [\n        {\n          label: '',\n          pointRadius: 3,\n          data: value,\n          fill: {\n            target: 'origin',\n            // below: 'rgb(0, 0, 255)',\n            above: gradient,\n          },\n\n          //borderColor: 'rgb(75, 192, 192)',\n          tension: 0.2,\n          backgroundColor: '#FFFAF2',\n          borderColor: '#340926',\n          width: 2,\n        },\n      ],\n    },\n    options: {\n      scales: {\n        x: {\n          display: false,\n        },\n        y: {\n          display: false,\n          ticks: {\n            // maxTicksLimit: 6,\n            family: 'Chromatica',\n            beginAtZero: true,\n            stepSize: 30,\n            max: 100,\n          },\n        },\n      },\n      plugins: {\n        legend: {\n          display: false,\n        },\n      },\n    },\n  });\n}\n\nasync function chart6(label, value) {\n  var ctx = document.getElementById('fcr').getContext('2d');\n  gradient = ctx.createLinearGradient(0, 0, 0, 400);\n  gradient.addColorStop(0, 'rgba(87,14,64,1)');\n  gradient.addColorStop(1, 'rgba(188,158,177,0.3)');\n  gradient2 = ctx.createLinearGradient(0, 0, 0, 400);\n  gradient2.addColorStop(0, 'rgba(87,14,64,1)');\n  gradient2.addColorStop(1, 'rgba(188,158,177,0)');\n  new Chart(document.getElementById('fcr-hero'), {\n    type: 'line',\n    data: {\n      labels: label,\n      datasets: [\n        {\n          label: '',\n          pointRadius: 3,\n          data: value,\n          fill: {\n            target: 'origin',\n            // below: 'rgb(0, 0, 255)',\n            above: gradient,\n          },\n\n          //borderColor: 'rgb(75, 192, 192)',\n          tension: 0.2,\n          backgroundColor: '#FFFAF2',\n          borderColor: '#340926',\n          width: 2,\n        },\n      ],\n    },\n    options: {\n      scales: {\n        x: {\n          display: false,\n          grid: {\n            drawTicks: false,\n          },\n        },\n\n        y: {\n          display: false,\n          grid: {\n            drawTicks: false,\n          },\n        },\n      },\n      plugins: {\n        legend: {\n          display: false,\n        },\n      },\n    },\n  });\n}\n\nvar data = {};\nvar fcrLabels = [];\nvar fcrValues = [];\nvar gradient, gradient2;\n//error here is that maybe we cannot create the gradient without creating the chart first\n$(document).ready(function () {\n  createData();\n});\n"],
  "mappings": "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",
  "names": ["prototype", "descriptors", "filter", "hasOwnProperty", "filter", "each", "defined", "index", "prototype", "toString", "each", "encode", "init_utils", "init_utils", "index", "isFormData", "isFileList", "transitional", "filter", "self", "prototype", "resolve", "validateStatus", "inRange", "resolve", "_resolve", "transitional", "adapters", "merge", "version", "validators", "transitional", "resolve", "_resolve", "index", "callback", "Axios", "AxiosError", "CanceledError", "isCancel", "CancelToken", "VERSION", "all", "isAxiosError", "spread", "toFormData", "AxiosHeaders", "HttpStatusCode", "mergeConfig", "init_axios", "color", "noop", "isNullOrUndef", "value", "isArray", "Array", "type", "Object", "prototype", "toString", "call", "slice", "isObject", "isNumberFinite", "Number", "isFinite", "finiteOrDefault", "defaultValue", "valueOrDefault", "callback", "fn", "args", "thisArg", "apply", "each", "loopable", "reverse", "i", "len", "keys", "length", "_elementsEqual", "a0", "a1", "ilen", "v0", "v1", "datasetIndex", "index", "clone", "source", "map", "target", "create", "klen", "k", "isValidKey", "key", "indexOf", "_merger", "options", "tval", "sval", "merge", "sources", "merger", "current", "mergeIf", "_mergerIf", "hasOwnProperty", "_splitKey", "parts", "split", "tmp", "part", "endsWith", "push", "_getKeyResolver", "obj", "resolveObjectKey", "resolver", "keyResolvers", "_capitalize", "str", "charAt", "toUpperCase", "_isClickEvent", "e", "almostEquals", "x", "y", "epsilon", "Math", "abs", "niceNum", "range", "roundedRange", "round", "niceRange", "pow", "floor", "log10", "fraction", "niceFraction", "_factorize", "result", "sqrt", "sort", "a", "b", "pop", "isNumber", "n", "isNaN", "parseFloat", "almostWhole", "rounded", "_setMinAndMaxByKey", "array", "property", "min", "max", "toRadians", "degrees", "PI", "toDegrees", "radians", "_decimalPlaces", "isFiniteNumber", "p", "getAngleFromPoint", "centrePoint", "anglePoint", "distanceFromXCenter", "distanceFromYCenter", "radialDistanceFromCenter", "angle", "atan2", "TAU", "distance", "distanceBetweenPoints", "pt1", "pt2", "_angleDiff", "PITAU", "_normalizeAngle", "_angleBetween", "start", "end", "sameAngleIsFullCircle", "s", "angleToStart", "angleToEnd", "startToAngle", "endToAngle", "_limitValue", "_int16Range", "_isBetween", "_lookup", "table", "cmp", "hi", "lo", "mid", "_filterBetween", "values", "listenArrayEvents", "listener", "_chartjs", "listeners", "defineProperty", "configurable", "enumerable", "arrayEvents", "forEach", "method", "base", "res", "object", "unlistenArrayEvents", "stub", "splice", "_arrayUnique", "items", "set", "Set", "size", "from", "throttled", "argsToUse", "ticking", "requestAnimFrame", "window", "debounce", "delay", "timeout", "clearTimeout", "setTimeout", "_getStartAndCountOfVisiblePoints", "meta", "points", "animationsDisabled", "pointCount", "count", "_sorted", "iScale", "_parsed", "axis", "minDefined", "maxDefined", "getUserBounds", "_lookupByKey", "getPixelForValue", "_scaleRangesChanged", "xScale", "yScale", "_scaleRanges", "newRanges", "xmin", "xmax", "ymin", "ymax", "changed", "assign", "isPatternOrGradient", "color", "Color", "getHoverColor", "saturate", "darken", "hexString", "applyAnimationsDefaults", "defaults", "undefined", "duration", "easing", "loop", "to", "describe", "_fallback", "_indexable", "_scriptable", "name", "colors", "properties", "numbers", "active", "animation", "resize", "show", "animations", "visible", "hide", "v", "applyLayoutsDefaults", "autoPadding", "padding", "top", "right", "bottom", "left", "getNumberFormat", "locale", "cacheKey", "JSON", "stringify", "formatter", "intlCache", "get", "Intl", "NumberFormat", "formatNumber", "num", "format", "calculateDelta", "tickValue", "ticks", "delta", "applyScaleDefaults", "display", "offset", "beginAtZero", "bounds", "clip", "grace", "grid", "lineWidth", "drawOnChartArea", "drawTicks", "tickLength", "tickWidth", "_ctx", "tickColor", "border", "dash", "dashOffset", "width", "title", "text", "minRotation", "maxRotation", "mirror", "textStrokeWidth", "textStrokeColor", "autoSkip", "autoSkipPadding", "labelOffset", "Ticks", "formatters", "minor", "major", "align", "crossAlign", "showLabelBackdrop", "backdropColor", "backdropPadding", "route", "startsWith", "getScope", "node", "root", "scope", "toFontString", "font", "family", "style", "weight", "_measureText", "ctx", "data", "gc", "longest", "string", "textWidth", "measureText", "_longestText", "arrayOfThings", "cache", "garbageCollect", "save", "j", "jlen", "thing", "nestedThing", "restore", "gcLen", "_alignPixel", "chart", "pixel", "devicePixelRatio", "currentDevicePixelRatio", "halfWidth", "clearCanvas", "canvas", "getContext", "resetTransform", "clearRect", "height", "drawPoint", "drawPointLegend", "w", "xOffset", "yOffset", "cornerRadius", "xOffsetW", "yOffsetW", "pointStyle", "rotation", "radius", "rad", "RAD_PER_DEG", "translate", "rotate", "drawImage", "beginPath", "ellipse", "arc", "closePath", "moveTo", "sin", "cos", "TWO_THIRDS_PI", "lineTo", "QUARTER_PI", "HALF_PI", "SQRT1_2", "rect", "fill", "borderWidth", "stroke", "_isPointInArea", "point", "area", "margin", "clipArea", "unclipArea", "_steppedLineTo", "previous", "flip", "mode", "midpoint", "_bezierCurveTo", "bezierCurveTo", "cp1x", "cp2x", "cp1y", "cp2y", "setRenderOpts", "opts", "translation", "fillStyle", "textAlign", "textBaseline", "decorateText", "line", "strikethrough", "underline", "metrics", "actualBoundingBoxLeft", "actualBoundingBoxRight", "actualBoundingBoxAscent", "actualBoundingBoxDescent", "yDecoration", "strokeStyle", "decorationWidth", "drawBackdrop", "oldColor", "fillRect", "renderText", "lines", "strokeWidth", "strokeColor", "backdrop", "strokeText", "maxWidth", "fillText", "lineHeight", "addRoundedRectPath", "h", "topLeft", "bottomLeft", "bottomRight", "topRight", "toLineHeight", "matches", "match", "LINE_HEIGHT", "_readValueToProps", "props", "ret", "objProps", "read", "prop", "numberOrZero", "toTRBL", "toTRBLCorners", "toPadding", "toFont", "fallback", "parseInt", "FONT_STYLE", "console", "warn", "resolve", "inputs", "context", "info", "cacheable", "_addGrace", "minmax", "change", "toDimension", "keepZero", "add", "createContext", "parentContext", "_createResolver", "scopes", "prefixes", "rootScopes", "getTarget", "finalRootScopes", "_resolve", "Symbol", "toStringTag", "_cacheable", "_scopes", "_rootScopes", "_getTarget", "override", "Proxy", "deleteProperty", "_keys", "_cached", "_resolveWithPrefixes", "getOwnPropertyDescriptor", "Reflect", "getPrototypeOf", "has", "getKeysFromAllScopes", "includes", "ownKeys", "storage", "_storage", "_attachContext", "proxy", "subProxy", "descriptorDefaults", "_proxy", "_context", "_subProxy", "_stack", "_descriptors", "setContext", "receiver", "_resolveWithContext", "allKeys", "scriptable", "indexable", "_allKeys", "isScriptable", "isFunction", "isIndexable", "descriptors", "_resolveScriptable", "_resolveArray", "needsSubResolver", "getValue", "Error", "join", "delete", "createSubResolver", "arr", "filter", "item", "resolveFallback", "addScopes", "parentScopes", "parentFallback", "parent", "allScopes", "addScopesFromKey", "subGetTarget", "prefix", "readKey", "resolveKeysFromAllScopes", "_parseObjectDataRadialScale", "_parsing", "parsed", "r", "parse", "splineCurve", "firstPoint", "middlePoint", "afterPoint", "t", "skip", "next", "d01", "d12", "s01", "s12", "fa", "fb", "monotoneAdjust", "deltaK", "mK", "pointsLen", "alphaK", "betaK", "tauK", "squaredMagnitude", "pointCurrent", "pointAfter", "getPoint", "EPSILON", "monotoneCompute", "indexAxis", "valueAxis", "getValueAxis", "pointBefore", "iPixel", "vPixel", "splineCurveMonotone", "slopeDelta", "sign", "capControlPoint", "pt", "capBezierPoints", "inArea", "inAreaPrev", "inAreaNext", "_updateBezierControlPoints", "controlPoints", "spanGaps", "cubicInterpolationMode", "prev", "tension", "_isDomSupported", "document", "_getParentNode", "domNode", "parentNode", "host", "parseMaxStyle", "styleValue", "parentProperty", "valueInPixels", "getStyle", "el", "getComputedStyle", "getPropertyValue", "getPositionedStyle", "styles", "suffix", "pos", "positions", "getCanvasPosition", "touches", "offsetX", "offsetY", "box", "useOffsetPos", "getBoundingClientRect", "clientX", "clientY", "getRelativePosition", "event", "borderBox", "boxSizing", "paddings", "borders", "getContainerSize", "maxHeight", "container", "clientWidth", "clientHeight", "containerStyle", "containerBorder", "containerPadding", "INFINITY", "getMaximumSize", "bbWidth", "bbHeight", "aspectRatio", "margins", "containerSize", "round1", "maintainHeight", "retinaScale", "forceRatio", "forceStyle", "pixelRatio", "deviceHeight", "deviceWidth", "setTransform", "readUsedSize", "element", "_pointInLine", "p1", "p2", "_steppedInterpolation", "_bezierInterpolation", "cp1", "cp2", "c", "d", "getRtlAdapter", "rtl", "rectX", "getRightToLeftAdapter", "getLeftToRightAdapter", "overrideTextDirection", "direction", "original", "getPropertyPriority", "setProperty", "prevTextDirection", "restoreTextDirection", "propertyFn", "between", "compare", "normalize", "normalizeSegment", "getSegment", "segment", "startBound", "endBound", "_boundSegment", "inside", "subStart", "prevValue", "startIsBefore", "endIsBefore", "shouldStart", "shouldStop", "_boundSegments", "segments", "sub", "findStartAndEnd", "solidSegments", "last", "cur", "stop", "_computeSegments", "segmentOptions", "_loop", "splitByStyles", "completeLoop", "_fullLoop", "doSplitByStyles", "chartContext", "_chart", "baseStyle", "readStyle", "_datasetIndex", "prevStyle", "addStyle", "l", "st", "dir", "p0", "p0DataIndex", "p1DataIndex", "styleChanged", "backgroundColor", "borderCapStyle", "borderDash", "borderDashOffset", "borderJoinStyle", "borderColor", "replacer", "uid", "toPercentage", "defined", "setsEqual", "_rlookupByKey", "_toLeftRightCenter", "_alignStartEnd", "_textX", "atEdge", "elasticIn", "elasticOut", "effects", "overrides", "Defaults", "supportsEventListenerOptions", "id", "dimension", "o", "POSITIVE_INFINITY", "ti", "requestAnimationFrame", "check", "linear", "easeInQuad", "easeOutQuad", "easeInOutQuad", "easeInCubic", "easeOutCubic", "easeInOutCubic", "easeInQuart", "easeOutQuart", "easeInOutQuart", "easeInQuint", "easeOutQuint", "easeInOutQuint", "easeInSine", "easeOutSine", "easeInOutSine", "easeInExpo", "easeOutExpo", "easeInOutExpo", "easeInCirc", "easeOutCirc", "easeInOutCirc", "easeInElastic", "easeOutElastic", "easeInOutElastic", "easeInBack", "easeOutBack", "easeInOutBack", "easeInBounce", "easeOutBounce", "m", "easeInOutBounce", "Map", "numeric", "notation", "maxTick", "logDelta", "numDecimal", "minimumFractionDigits", "maximumFractionDigits", "logarithmic", "remain", "significand", "constructor", "_appliers", "datasets", "platform", "getDevicePixelRatio", "elements", "events", "hover", "hoverBackgroundColor", "hoverBorderColor", "hoverColor", "interaction", "intersect", "includeInvisible", "maintainAspectRatio", "onHover", "onClick", "parsing", "plugins", "responsive", "scale", "scales", "showLine", "drawActiveElementsOnTop", "targetScope", "targetName", "scopeObject", "targetScopeObject", "privateName", "defineProperties", "writable", "local", "appliers", "ownerDocument", "defaultView", "shadowRoot", "passiveSupported", "passive", "addEventListener", "removeEventListener", "setWidth", "xPlus", "leftForLtr", "itemWidth", "_itemWidth", "awaitAll", "animations", "properties", "running", "keys", "Object", "i", "length", "anim", "active", "push", "wait", "Promise", "all", "resolveTargetOptions", "target", "newOptions", "options", "$shared", "assign", "$animations", "scaleClip", "scale", "allowedOverflow", "opts", "reverse", "min", "undefined", "max", "start", "end", "defaultClip", "xScale", "yScale", "x", "y", "top", "right", "bottom", "left", "toClip", "value", "t", "r", "b", "l", "isObject", "disabled", "getSortedDatasetIndices", "chart", "filterVisible", "metasets", "_getSortedDatasetMetas", "ilen", "index", "applyStack", "stack", "dsIndex", "singleMode", "mode", "datasetIndex", "otherValue", "values", "isFinite", "sign", "convertObjectDataToArray", "data", "adata", "Array", "key", "isStacked", "meta", "stacked", "getStackKey", "indexScale", "valueScale", "id", "type", "getUserBounds", "minDefined", "maxDefined", "Number", "NEGATIVE_INFINITY", "POSITIVE_INFINITY", "getOrCreateStack", "stacks", "stackKey", "indexValue", "subStack", "getLastIndexInStack", "vScale", "positive", "getMatchingVisibleMetas", "updateStacks", "controller", "parsed", "_cachedMeta", "_stacks", "iScale", "iAxis", "axis", "vAxis", "item", "itemStacks", "_top", "_bottom", "visualValues", "_visualValues", "getFirstScaleId", "scales", "filter", "shift", "createDatasetContext", "parent", "createContext", "dataset", "createDataContext", "element", "dataIndex", "raw", "clearStacks", "items", "_parsed", "getAllScaleValues", "_cache", "$bar", "visibleMetas", "concat", "getAllParsedValues", "_arrayUnique", "sort", "a", "computeMinSampleSize", "_length", "curr", "prev", "updateMinAndPrev", "defined", "Math", "abs", "getPixelForValue", "ticks", "getPixelForTick", "computeFitCategoryTraits", "ruler", "stackCount", "thickness", "barThickness", "size", "ratio", "isNullOrUndef", "categoryPercentage", "barPercentage", "chunk", "pixels", "computeFlexCategoryTraits", "next", "percent", "parseFloatBar", "entry", "startValue", "parse", "endValue", "barStart", "barEnd", "_custom", "parseValue", "isArray", "parseArrayOrPrimitive", "count", "labels", "getLabels", "singleScale", "isFloatBar", "custom", "barSign", "actualBase", "isHorizontal", "borderProps", "horizontal", "base", "setBorderSkipped", "edge", "borderSkipped", "res", "enableBorderRadius", "parseEdge", "swap", "startEnd", "orig", "v1", "v2", "v", "setInflateAmount", "inflateAmount", "getRatioAndOffset", "rotation", "circumference", "cutout", "ratioX", "ratioY", "offsetX", "offsetY", "TAU", "startAngle", "endAngle", "startX", "cos", "startY", "sin", "endX", "endY", "calcMax", "angle", "_angleBetween", "calcMin", "maxX", "maxY", "HALF_PI", "minX", "PI", "minY", "abstract", "Error", "binarySearch", "metaset", "intersect", "_sorted", "lookupMethod", "_reversePixels", "_rlookupByKey", "_lookupByKey", "_sharedOptions", "el", "range", "getRange", "lo", "hi", "evaluateInteractionItems", "position", "handler", "getSortedVisibleDatasetMetas", "j", "skip", "getDistanceMetricForAxis", "useX", "indexOf", "useY", "pt1", "pt2", "deltaX", "deltaY", "sqrt", "pow", "getIntersectItems", "useFinalPosition", "includeInvisible", "isPointInArea", "evaluationFunc", "_isPointInArea", "chartArea", "inRange", "getNearestRadialItems", "getProps", "getAngleFromPoint", "getNearestCartesianItems", "distanceMetric", "minDistance", "center", "getCenterPoint", "pointInArea", "distance", "getNearestItems", "getAxisItems", "rangeMethod", "intersectsItem", "filterByPosition", "array", "pos", "filterDynamicPositionByAxis", "STATIC_POSITIONS", "box", "sortByWeight", "v0", "weight", "wrapBoxes", "boxes", "layoutBoxes", "stackWeight", "buildStacks", "layouts", "wrap", "includes", "_stack", "placed", "setLayoutDims", "params", "vBoxMaxWidth", "hBoxMaxHeight", "layout", "fullSize", "factor", "width", "availableWidth", "height", "availableHeight", "buildLayoutBoxes", "centerHorizontal", "centerVertical", "leftAndTop", "rightAndBottom", "vertical", "getCombinedMax", "maxPadding", "updateMaxPadding", "boxPadding", "updateDims", "getPadding", "newWidth", "outerWidth", "newHeight", "outerHeight", "widthChanged", "w", "heightChanged", "h", "same", "other", "handleMaxPadding", "updatePos", "change", "getMargins", "marginForPositions", "positions", "margin", "forEach", "fitBoxes", "refitBoxes", "refit", "changed", "update", "setBoxDims", "placeBoxes", "userPadding", "padding", "initCanvas", "canvas", "aspectRatio", "style", "renderHeight", "getAttribute", "renderWidth", "EXPANDO_KEY", "initial", "display", "boxSizing", "isNullOrEmpty", "displayWidth", "readUsedSize", "displayHeight", "addListener", "node", "listener", "addEventListener", "eventListenerOptions", "removeListener", "removeEventListener", "fromNativeEvent", "event", "EVENT_TYPES", "getRelativePosition", "native", "nodeListContains", "nodeList", "contains", "createAttachObserver", "observer", "MutationObserver", "entries", "trigger", "addedNodes", "removedNodes", "observe", "document", "childList", "subtree", "createDetachObserver", "onWindowResize", "dpr", "window", "devicePixelRatio", "oldDevicePixelRatio", "drpListeningCharts", "resize", "currentDevicePixelRatio", "listenDevicePixelRatioChanges", "set", "unlistenDevicePixelRatioChanges", "delete", "createResizeObserver", "container", "_getParentNode", "throttled", "clientWidth", "ResizeObserver", "contentRect", "releaseObserver", "disconnect", "createProxyAndListen", "proxy", "ctx", "_detectPlatform", "_isDomSupported", "OffscreenCanvas", "BasicPlatform", "DomPlatform", "autoSkip", "tickOpts", "determinedMaxTicks", "determineMaxTicks", "ticksLimit", "maxTicksLimit", "majorIndices", "major", "enabled", "getMajorIndices", "numMajorIndices", "first", "last", "newTicks", "skipMajors", "spacing", "calculateSpacing", "avgMajorSpacing", "round", "offset", "tickLength", "_tickSize", "maxScale", "maxChart", "_maxLength", "floor", "evenMajorSpacing", "getEvenSpacing", "factors", "_factorize", "result", "ceil", "majorStart", "majorEnd", "valueOrDefault", "arr", "len", "diff", "sample", "numItems", "increment", "getPixelForGridLine", "offsetGridLines", "validIndex", "_startPixel", "_endPixel", "epsilon", "lineValue", "garbageCollect", "caches", "each", "cache", "gc", "gcLen", "splice", "getTickMarkLength", "drawTicks", "getTitleHeight", "fallback", "font", "toFont", "toPadding", "lines", "text", "lineHeight", "createScaleContext", "createTickContext", "tick", "titleAlign", "align", "ret", "_toLeftRightCenter", "reverseAlign", "titleArgs", "maxWidth", "titleX", "titleY", "_alignStartEnd", "positionAxisID", "offsetFromEdge", "registerDefaults", "scope", "parentScope", "itemDefaults", "merge", "create", "defaults", "get", "defaultRoutes", "routeDefaults", "descriptors", "describe", "routes", "property", "propertyParts", "split", "sourceName", "pop", "sourceScope", "join", "parts", "targetName", "targetScope", "route", "isIChartComponent", "proto", "allPlugins", "config", "localIds", "plugins", "registry", "getPlugin", "local", "plugin", "getOpts", "createDescriptors", "context", "getContext", "pluginOpts", "pluginScopeKeys", "scopes", "getOptionScopes", "createResolver", "scriptable", "indexable", "allKeys", "getIndexAxis", "datasetDefaults", "datasets", "datasetOptions", "indexAxis", "getAxisFromDefaultScaleID", "getDefaultScaleIDFromAxis", "idMatchesAxis", "axisFromPosition", "determineAxis", "scaleOptions", "toLowerCase", "getAxisFromDataset", "retrieveAxisFromDatasets", "boundDs", "d", "xAxisID", "yAxisID", "mergeScaleConfig", "chartDefaults", "overrides", "configScales", "chartIndexAxis", "scaleConf", "console", "error", "_proxy", "warn", "defaultId", "defaultScaleOptions", "mergeIf", "defaultID", "initOptions", "initData", "initConfig", "cachedKeys", "cacheKey", "generate", "keyCache", "keysCached", "add", "getResolver", "resolverCache", "prefixes", "Map", "cached", "resolver", "_createResolver", "subPrefixes", "p", "needContext", "names", "isScriptable", "isIndexable", "_descriptors", "prop", "isFunction", "hasFunction", "positionIsHorizontal", "KNOWN_POSITIONS", "compare2Level", "l1", "l2", "onAnimationsComplete", "animationOptions", "animation", "notifyPlugins", "callCallback", "onComplete", "onAnimationProgress", "onProgress", "getCanvas", "getElementById", "moveNumericKeys", "obj", "move", "intKey", "determineLastEvent", "e", "lastEvent", "inChartArea", "isClick", "getSizeForArea", "field", "clip", "getDatasetArea", "invalidatePlugins", "Chart", "instances", "_plugins", "invalidate", "clipArc", "pixelMargin", "outerRadius", "innerRadius", "angleMargin", "beginPath", "arc", "closePath", "toRadiusCorners", "_readValueToProps", "parseBorderRadius", "angleDelta", "o", "borderRadius", "halfThickness", "innerLimit", "computeOuterLimit", "val", "outerArcLimit", "_limitValue", "outerStart", "outerEnd", "innerStart", "innerEnd", "rThetaToXY", "theta", "pathArc", "circular", "innerR", "spacingOffset", "alpha", "noSpacingInnerRadius", "noSpacingOuterRadius", "avNogSpacingRadius", "adjustedAngle", "beta", "angleOffset", "outerStartAdjustedRadius", "outerEndAdjustedRadius", "outerStartAdjustedAngle", "outerEndAdjustedAngle", "innerStartAdjustedRadius", "innerEndAdjustedRadius", "innerStartAdjustedAngle", "innerEndAdjustedAngle", "outerMidAdjustedAngle", "pCenter", "p4", "lineTo", "innerMidAdjustedAngle", "p8", "moveTo", "outerStartX", "outerStartY", "outerEndX", "outerEndY", "drawArc", "fullCircles", "fill", "isNaN", "drawBorder", "borderWidth", "borderJoinStyle", "borderDash", "borderDashOffset", "inner", "borderAlign", "setLineDash", "lineDashOffset", "lineWidth", "lineJoin", "stroke", "setStyle", "lineCap", "borderCapStyle", "strokeStyle", "borderColor", "previous", "getLineMethod", "stepped", "_steppedLineTo", "tension", "cubicInterpolationMode", "_bezierCurveTo", "pathVars", "points", "segment", "paramsStart", "paramsEnd", "segmentStart", "segmentEnd", "outside", "loop", "pathSegment", "line", "lineMethod", "point", "fastPathSegment", "avgX", "countX", "prevX", "lastY", "pointIndex", "drawX", "truncX", "_getSegmentMethod", "useFastPath", "_decimated", "_loop", "_getInterpolationMethod", "_steppedInterpolation", "_bezierInterpolation", "_pointInLine", "strokePathWithCache", "path", "_path", "Path2D", "strokePathDirect", "segments", "segmentMethod", "draw", "usePath2D", "radius", "hitRadius", "getBarBounds", "bar", "half", "skipOrLimit", "parseBorderWidth", "maxW", "maxH", "toTRBL", "toTRBLCorners", "maxR", "enableBorder", "topLeft", "topRight", "bottomLeft", "bottomRight", "boundingRects", "bounds", "border", "outer", "skipX", "skipY", "skipBoth", "_isBetween", "hasRadius", "addNormalRectPath", "rect", "inflateRect", "amount", "refRect", "getBorderColor", "BORDER_COLORS", "getBackgroundColor", "BACKGROUND_COLORS", "colorizeDefaultDataset", "backgroundColor", "colorizeDoughnutDataset", "map", "colorizePolarAreaDataset", "getColorizer", "getDatasetMeta", "DoughnutController", "PolarAreaController", "containsColorsDefinitions", "k", "containsColorsDefinition", "descriptor", "lttbDecimation", "samples", "slice", "decimated", "bucketWidth", "sampledIndex", "endIndex", "maxAreaPoint", "maxArea", "area", "nextA", "avgY", "avgRangeStart", "avgRangeEnd", "avgRangeLength", "rangeOffs", "rangeTo", "pointAx", "pointAy", "minMaxDecimation", "minIndex", "maxIndex", "startIndex", "xMin", "xMax", "dx", "lastIndex", "intermediateIndex1", "intermediateIndex2", "cleanDecimatedDataset", "_data", "defineProperty", "configurable", "enumerable", "writable", "cleanDecimatedData", "getStartAndCountOfVisiblePointsSimplified", "pointCount", "_segments", "tpoints", "_findSegmentEnd", "_getBounds", "source", "targetSegments", "_boundSegments", "tgt", "subBounds", "fillSources", "_boundSegment", "fillSource", "_getEdge", "_normalizeAngle", "_pointsFromSegments", "boundary", "linePoints", "fn", "_createBoundaryLine", "LineElement", "_fullLoop", "_shouldApplyFill", "_resolveTarget", "sources", "propagate", "visited", "visible", "_decodeFill", "parseFillOption", "parseFloat", "decodeTargetIndex", "firstCh", "_getTargetPixel", "pixel", "getBasePixel", "_getTargetValue", "getBaseValue", "fillOption", "_buildStackLine", "sourcePoints", "linesBelow", "getLinesBelow", "addPointsBelow", "below", "metas", "hidden", "unshift", "sourcePoint", "postponed", "findPoint", "interpolate", "pointValue", "firstValue", "lastValue", "_getTarget", "getLineByIndex", "computeBoundary", "simpleArc", "isDatasetVisible", "getPointPositionForValue", "computeCircularBoundary", "computeLinearBoundary", "grid", "getDistanceFromCenterForValue", "_drawfill", "lineOpts", "color", "above", "clipArea", "doFill", "unclipArea", "cfg", "save", "clipVertical", "restore", "clipY", "lineLoop", "firstPoint", "lastPoint", "src", "notShape", "fillStyle", "clipBounds", "interpolatedLineTo", "targetLoop", "interpolatedPoint", "calculateItemSize", "boxWidth", "labelFont", "legendItem", "_itemHeight", "itemWidth", "calculateItemWidth", "itemHeight", "calculateItemHeight", "legendItemText", "reduce", "measureText", "fontLineHeight", "calculateLegendItemHeight", "labelHeight", "isListened", "onHover", "onLeave", "onClick", "createTitle", "titleOpts", "title", "Title", "configure", "addBox", "titleBlock", "pushOrConcat", "toPush", "prototype", "apply", "splitNewlines", "str", "String", "createTooltipItem", "label", "getLabelAndValue", "getParsed", "formattedValue", "getDataset", "getTooltipSize", "tooltip", "body", "footer", "boxHeight", "bodyFont", "titleFont", "footerFont", "titleLineCount", "footerLineCount", "bodyLineItemCount", "combinedBodyLength", "bodyItem", "before", "after", "beforeBody", "afterBody", "titleSpacing", "titleMarginBottom", "bodyLineHeight", "displayColors", "bodySpacing", "footerMarginTop", "footerSpacing", "widthPadding", "maxLineWidth", "string", "determineYAlign", "doesNotFitWithAlign", "xAlign", "caret", "caretSize", "caretPadding", "determineXAlign", "yAlign", "chartWidth", "determineAlignment", "alignX", "alignY", "paddingAndSize", "getBackgroundPoint", "alignment", "cornerRadius", "getAlignedX", "getBeforeAfterBodyLines", "callback", "createTooltipContext", "tooltipItems", "overrideCallbacks", "callbacks", "override", "invokeCallbackWithFallback", "name", "arg", "call", "defaultCallbacks", "findOrAddLabel", "addedLabels", "addIfString", "lastIndexOf", "_getLabelForValue", "generateTicks", "generationOptions", "dataRange", "MIN_SPACING", "step", "precision", "maxTicks", "maxDigits", "includeBounds", "unit", "maxSpaces", "rmin", "rmax", "countDefined", "minSpacing", "niceNum", "niceMin", "niceMax", "numSpaces", "almostWhole", "almostEquals", "decimalPlaces", "_decimalPlaces", "relativeLabelSize", "tickValue", "minRotation", "rad", "toRadians", "isMajor", "tickVal", "remain", "log10Floor", "steps", "rangeExp", "rangeStep", "startExp", "finiteOrDefault", "minExp", "exp", "stepSize", "significand", "lastTick", "getTickBackdropHeight", "backdropPadding", "measureLabelSize", "_longestText", "determineLimits", "fitWithPointLabels", "_padding", "limits", "labelSizes", "valueCount", "_pointLabels", "pointLabelOpts", "pointLabels", "additionalAngle", "centerPointLabels", "setContext", "getPointLabelContext", "pointPosition", "getPointPosition", "drawingArea", "plFont", "textSize", "angleRadians", "getIndexAngle", "toDegrees", "hLimits", "vLimits", "updateLimits", "setCenterPoint", "_pointLabelItems", "buildPointLabelItems", "createPointLabelItem", "itemOpts", "outerDistance", "extra", "pointLabelPosition", "yForAngle", "textAlign", "getTextAlignForAngle", "leftForTextAlign", "isNotOverlapped", "apexesInArea", "drawPointLabelBox", "backdropColor", "backdropLeft", "backdropTop", "backdropWidth", "backdropHeight", "some", "addRoundedRectPath", "fillRect", "drawPointLabels", "labelCount", "optsAtIndex", "renderText", "textBaseline", "pathRadiusLine", "xCenter", "yCenter", "drawRadiusLine", "gridLineOpts", "borderOpts", "dash", "dashOffset", "createPointLabelContext", "sorter", "input", "adapter", "_adapter", "parser", "isoWeekday", "_parseOpts", "isNumber", "startOf", "determineUnitForAutoTicks", "minUnit", "capacity", "UNITS", "interval", "INTERVALS", "MAX_SAFE_INTEGER", "common", "determineUnitForFormatting", "numTicks", "determineMajorUnit", "addTick", "time", "timestamps", "_lookup", "timestamp", "setMajorTicks", "majorUnit", "ticksFromTimestamps", "table", "prevSource", "nextSource", "prevTarget", "nextTarget", "span", "Animator", "transparent", "interpolators", "Animation", "Animations", "isDirectUpdateMode", "cloneIfNotShared", "createStack", "DatasetController", "BarController", "BubbleController", "LineController", "PieController", "RadarController", "ScatterController", "DateAdapterBase", "BasePlatform", "Element", "getTicksLimit", "Scale", "TypedRegistry", "Registry", "PluginService", "addIfFound", "Config", "getChart", "ArcElement", "PointElement", "BarElement", "getBoxSize", "itemsEqual", "Legend", "positioners", "Tooltip", "CategoryScale", "LinearScaleBase", "LinearScale", "changeExponent", "LogarithmicScale", "RadialLinearScale", "TimeScale", "TimeSeriesScale", "registerables", "constructor", "_request", "_charts", "_running", "_lastDate", "_notify", "anims", "date", "listeners", "numSteps", "duration", "currentStep", "_refresh", "requestAnimFrame", "_update", "Date", "now", "remaining", "_active", "_total", "_getAnims", "charts", "complete", "progress", "listen", "cb", "has", "acc", "cur", "_duration", "stop", "cancel", "remove", "boolean", "from", "to", "c0", "helpersColor", "c1", "valid", "mix", "hexString", "number", "currentValue", "resolve", "_fn", "_easing", "effects", "easing", "linear", "_start", "delay", "_target", "_prop", "_from", "_to", "_promises", "elapsed", "promises", "rej", "resolved", "method", "_chart", "_properties", "animatedProps", "getOwnPropertyNames", "option", "_animateOptions", "_createAnimations", "then", "props", "charAt", "animator", "shared", "canStack", "_stacked", "datasetElementType", "dataElementType", "_ctx", "_cachedDataOpts", "getMeta", "_type", "_parsing", "_objectData", "_drawStart", "_drawCount", "enableOptionSharing", "supportsDecimation", "$context", "_syncList", "initialize", "linkScales", "addElements", "isPluginEnabled", "updateIndex", "chooseId", "xid", "yid", "rid", "rAxisID", "iid", "iAxisID", "vid", "vAxisID", "getScaleForId", "rScale", "scaleID", "_getOtherScale", "reset", "_destroy", "unlistenArrayEvents", "_dataCheck", "isExtensible", "listenArrayEvents", "buildOrUpdateElements", "resetNewElements", "stackChanged", "oldStacked", "_resyncElements", "scopeKeys", "datasetScopeKeys", "parsing", "sorted", "parseArrayData", "parseObjectData", "parsePrimitiveData", "isNotInOrderComparedToPrev", "xAxisKey", "yAxisKey", "resolveObjectKey", "getDataElement", "updateRangeFromParsed", "parsedValue", "NaN", "getMinMax", "otherScale", "otherMin", "otherMax", "_skip", "getMaxOverflow", "getLabelForValue", "_clip", "elements", "drawActiveElementsOnTop", "getStyle", "resolveDatasetElementOptions", "resolveDataElementOptions", "_resolveElementOptions", "elementType", "sharing", "datasetElementScopeKeys", "resolveNamedOptions", "freeze", "_resolveAnimations", "transition", "datasetAnimationScopeKeys", "_cacheable", "getSharedOptions", "includeOptions", "sharedOptions", "_animationsDisabled", "_getSharedOptions", "firstOpts", "previouslySharedOptions", "updateSharedOptions", "updateElement", "_setStyle", "removeHoverStyle", "setHoverStyle", "_removeDatasetHoverStyle", "_setDatasetHoverStyle", "arg1", "arg2", "numMeta", "numData", "_insertElements", "_removeElements", "updateElements", "removed", "_sync", "args", "_dataChanges", "_onDataPush", "arguments", "_onDataPop", "_onDataShift", "_onDataSplice", "newCount", "_onDataUnshift", "grouped", "numbers", "_index_", "_value_", "beginAtZero", "iAxisKey", "vAxisKey", "bars", "_getRuler", "vpixels", "head", "_calculateBarValuePixels", "ipixels", "_calculateBarIndexPixels", "_getStacks", "skipNull", "_getStackCount", "_getStackIndex", "baseValue", "minBarLength", "floating", "getDataVisibility", "startPixel", "getPixelForDecimal", "endPixel", "getValueForPixel", "halfGrid", "getLineWidthForValue", "maxBarThickness", "Infinity", "stackIndex", "rects", "iPixel", "vPixel", "animateRotate", "animateScale", "_scriptable", "_indexable", "startsWith", "legend", "generateLabels", "pointStyle", "fontColor", "toggleDataVisibility", "getter", "_getRotation", "_getCircumference", "_getRotationExtents", "arcs", "getMaxBorderWidth", "getMaxOffset", "maxSize", "toPercentage", "chartWeight", "_getRingWeight", "maxHeight", "maxRadius", "toDimension", "radiusLength", "_getVisibleDatasetWeightTotal", "total", "calculateTotal", "_getRingWeightOffset", "_circumference", "calculateCircumference", "animationOpts", "centerX", "centerY", "metaData", "formatNumber", "locale", "hoverBorderWidth", "hoverOffset", "ringWeightOffset", "showLine", "spanGaps", "_dataset", "animationsDisabled", "_getStartAndCountOfVisiblePoints", "_scaleRangesChanged", "_datasetIndex", "animated", "maxGapLength", "directUpdate", "pointsCount", "prevParsed", "nullData", "updateControlPoints", "angleLines", "_parseObjectDataRadialScale", "bind", "_updateRadius", "minSize", "cutoutPercentage", "getVisibleDatasetCount", "datasetStartAngle", "defaultAngle", "countVisibleElements", "_computeAngle", "interaction", "getElement", "members", "init", "formats", "format", "endOf", "_date", "modes", "nearest", "_layers", "z", "removeBox", "layoutItem", "minPadding", "verticalBoxes", "horizontalBoxes", "beforeLayout", "visibleVerticalBoxCount", "acquireContext", "releaseContext", "getDevicePixelRatio", "getMaximumSize", "isAttached", "updateConfig", "touchstart", "touchmove", "touchend", "pointerenter", "pointerdown", "pointermove", "pointerup", "pointerleave", "pointerout", "supportsEventListenerOptions", "passive", "removeAttribute", "setAttribute", "proxies", "$proxies", "handlers", "attach", "detach", "isConnected", "tooltipPosition", "hasValue", "final", "ticksLength", "_margins", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight", "labelRotation", "_range", "_gridLineItems", "_labelItems", "_labelSizes", "_longestTextCache", "_userMax", "_userMin", "_suggestedMax", "_suggestedMin", "_ticksLength", "_borderValue", "_dataLimitsCached", "suggestedMin", "suggestedMax", "getTicks", "xLabels", "yLabels", "getLabelItems", "_computeLabelItems", "beforeUpdate", "margins", "grace", "sampleSize", "beforeSetDimensions", "setDimensions", "afterSetDimensions", "beforeDataLimits", "determineDataLimits", "afterDataLimits", "_addGrace", "beforeBuildTicks", "buildTicks", "afterBuildTicks", "samplingEnabled", "_convertTicksToLabels", "beforeCalculateLabelRotation", "calculateLabelRotation", "afterCalculateLabelRotation", "afterAutoSkip", "beforeFit", "fit", "afterFit", "afterUpdate", "reversePixels", "_alignToPixels", "alignToPixels", "_callHooks", "beforeTickToLabelConversion", "generateTickLabels", "afterTickToLabelConversion", "maxRotation", "tickWidth", "maxLabelDiagonal", "_isVisible", "_getLabelSizes", "maxLabelWidth", "widest", "maxLabelHeight", "highest", "asin", "gridOpts", "titleHeight", "tickPadding", "mirror", "labelWidth", "_calculatePadding", "_handleMargins", "isRotated", "labelsBelowTicks", "offsetLeft", "offsetRight", "isFullSize", "_computeLabelSizes", "widths", "heights", "widestLabelSize", "highestLabelSize", "jlen", "tickFont", "fontString", "nestedLabel", "_resolveTickFontOptions", "_measureText", "valueAt", "idx", "decimal", "_int16Range", "_alignPixel", "getDecimalForPixel", "optionTicks", "rot", "autoSkipPadding", "_computeGridLineItems", "tl", "axisWidth", "axisHalfWidth", "alignBorderValue", "borderValue", "alignedLineValue", "tx1", "ty1", "tx2", "ty2", "x1", "y1", "x2", "y2", "limit", "optsAtIndexBorder", "lineColor", "tickColor", "tickBorderDash", "tickBorderDashOffset", "crossAlign", "tickAndPadding", "hTickAndPadding", "lineCount", "textOffset", "_getXAxisLabelAlignment", "_getYAxisLabelAlignment", "labelOffset", "halfCount", "strokeColor", "textStrokeColor", "strokeWidth", "textStrokeWidth", "tickTextAlign", "showLabelBackdrop", "backdrop", "labelPadding", "translation", "_computeLabelArea", "drawBackground", "findIndex", "drawGrid", "drawLine", "p1", "p2", "drawOnChartArea", "lastLineWidth", "drawLabels", "renderTextOptions", "drawTitle", "tz", "gz", "bz", "axisID", "_maxDigits", "fontSize", "isForType", "isPrototypeOf", "register", "getPrototypeOf", "unregister", "controllers", "_typedRegistries", "_each", "addControllers", "addPlugins", "addScales", "getController", "_get", "getScale", "removeControllers", "removeElements", "removePlugins", "removeScales", "typedRegistry", "reg", "_getRegistryForType", "_exec", "itemReg", "component", "camelMethod", "_capitalize", "_init", "notify", "hook", "_createDescriptors", "cancelable", "_oldCache", "_notifyStateChanges", "previousDescriptors", "Set", "_config", "_scopeCache", "_resolverCache", "platform", "clearCache", "clear", "datasetType", "additionalOptionScopes", "_cachedScopes", "mainScope", "resetCache", "keyLists", "chartOptionScopes", "subResolver", "_attachContext", "descriptorDefaults", "c", "version", "userConfig", "initialCanvas", "existingChart", "uid", "_options", "_aspectRatio", "_metasets", "_lastEvent", "_listeners", "_responsiveListeners", "_sortedMetasets", "_hiddenIndices", "attached", "_doResize", "debounce", "resizeDelay", "_initialize", "maintainAspectRatio", "responsive", "retinaScale", "bindEvents", "clearCanvas", "_resize", "_resizeBeforeDraw", "newSize", "newRatio", "onResize", "render", "ensureScalesHaveIDs", "scalesOptions", "axisOptions", "buildOrUpdateScales", "scaleOpts", "updated", "isRadial", "dposition", "dtype", "scaleType", "scaleClass", "hasUpdated", "_updateMetasets", "_destroyDatasetMeta", "_removeUnreferencedMetasets", "buildOrUpdateControllers", "newControllers", "order", "ControllerClass", "_resetElements", "animsDisabled", "_updateScales", "_checkEventBindings", "_updateHiddenIndices", "_minPadding", "autoPadding", "_updateLayout", "_updateDatasets", "_eventHandler", "_updateHoverStyles", "existingEvents", "newEvents", "events", "setsEqual", "unbindEvents", "changes", "_getUniformDataChanges", "datasetCount", "makeSet", "changeSet", "noArea", "_idx", "_updateDataset", "layers", "_drawDatasets", "_drawDataset", "useClip", "getElementsAtEventForMode", "Interaction", "setDatasetVisibility", "_updateVisibility", "hide", "show", "_stop", "destroy", "toBase64Image", "toDataURL", "bindUserEvents", "bindResponsiveEvents", "_add", "_remove", "detached", "updateHoverStyle", "prefix", "getActiveElements", "setActiveElements", "activeElements", "lastActive", "_elementsEqual", "pluginId", "replay", "hoverOptions", "hover", "deactivated", "activated", "eventFilter", "_handleEvent", "_getActiveElements", "_isClickEvent", "chartX", "chartY", "rAdjust", "betweenAngles", "withinRadius", "halfAngle", "halfRadius", "translate", "fix", "radiusOffset", "capBezierPoints", "_points", "_pointsUpdated", "_updateBezierControlPoints", "_computeSegments", "_interpolate", "interpolated", "hoverRadius", "mouseX", "mouseY", "inXRange", "inYRange", "drawPoint", "addRectPath", "replace", "forceOverride", "_args", "chartOptions", "colorizer", "algorithm", "beforeElementsUpdate", "xAxis", "threshold", "afterDatasetsUpdate", "$filler", "beforeDraw", "drawTime", "beforeDatasetsDraw", "beforeDatasetDraw", "labelOpts", "usePointStyle", "pointStyleWidth", "_added", "legendHitBoxes", "_hoveredItem", "doughnutMode", "legendItems", "columnSizes", "lineWidths", "buildLabels", "_computeTitleHeight", "_fitRows", "_fitCols", "hitboxes", "totalHeight", "row", "heightLimit", "totalWidth", "currentColWidth", "currentColHeight", "col", "adjustHitBoxes", "rtl", "rtlHelper", "getRtlAdapter", "hitbox", "leftForLtr", "_draw", "defaultColor", "halfFontSize", "cursor", "drawLegendBox", "lineDash", "drawOptions", "SQRT2", "xPlus", "drawPointLegend", "yBoxTop", "xBoxLeft", "fillText", "strikethrough", "overrideTextDirection", "textDirection", "textWidth", "setWidth", "realX", "_textX", "restoreTextDirection", "titlePadding", "topPaddingPlusHalfFontSize", "_getLegendItemAt", "hitBox", "lh", "handleEvent", "hoveredItem", "sameItem", "_element", "afterEvent", "ci", "useBorderRadius", "_drawArgs", "fontOpts", "WeakMap", "average", "eventPosition", "nearestElement", "distanceBetweenPoints", "tp", "beforeTitle", "noop", "afterTitle", "beforeLabel", "tooltipItem", "labelColor", "labelTextColor", "bodyColor", "labelPointStyle", "afterLabel", "beforeFooter", "afterFooter", "opacity", "_eventPosition", "_size", "_cachedAnimations", "_tooltipItems", "dataPoints", "caretX", "caretY", "labelColors", "labelPointStyles", "labelTextColors", "getTitle", "getBeforeBody", "getBody", "bodyItems", "scoped", "getAfterBody", "getFooter", "_createItems", "itemSort", "positionAndSize", "backgroundPoint", "external", "drawCaret", "tooltipPoint", "caretPosition", "getCaretPosition", "x3", "y3", "ptX", "ptY", "pt", "titleColor", "_drawColorBox", "colorX", "rtlColorX", "yOffSet", "colorY", "multiKeyBackground", "outerX", "innerX", "strokeRect", "drawBody", "bodyAlign", "xLinePadding", "fillLineOfText", "bodyAlignForCalculation", "textColor", "drawFooter", "footerAlign", "footerColor", "tooltipSize", "quadraticCurveTo", "_updateAnimationTarget", "animX", "animY", "_willRender", "hasTooltipContent", "globalAlpha", "positionChanged", "_positionChanged", "_ignoreReplayEvents", "afterInit", "afterDraw", "_fallback", "_startValue", "_valueRange", "_addedLabels", "added", "_endValue", "handleTickRangeOptions", "setMin", "setMax", "minSign", "maxSign", "getTickLimit", "computeTickLimit", "numericGeneratorOptions", "_setMinAndMaxByKey", "Ticks", "formatters", "numeric", "log10", "m", "logarithmic", "_zero", "animate", "leftMovement", "rightMovement", "topMovement", "bottomMovement", "angleMultiplier", "scalingFactor", "getValueForDistanceFromCenter", "scaledDistance", "pointLabel", "distanceFromCenter", "getBasePosition", "getPointLabelPosition", "rotate", "millisecond", "second", "minute", "hour", "day", "week", "month", "quarter", "year", "adapters", "displayFormats", "_unit", "_majorUnit", "_offsets", "_normalized", "normalized", "_applyBounds", "_getLabelBounds", "getLabelTimestamps", "timeOpts", "_generate", "_filterBetween", "_getLabelCapacity", "initOffsets", "offsetAfterAutoskip", "getDecimalForValue", "minor", "weekday", "hasWeekday", "getDataTimestamps", "tooltipFormat", "datetime", "fmt", "_tickFormatFunction", "formatter", "minorFormat", "majorFormat", "offsets", "_getLabelSize", "ticksOpts", "tickLabelWidth", "cosRotation", "sinRotation", "tickFontSize", "exampleTime", "exampleLabel", "normalize", "_table", "_minPos", "_tableRange", "_getTimestampsForTable", "buildLookupTable", "init_axios"]
}
